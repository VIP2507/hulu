{"version":3,"sources":["Components/Header/Header.js","requests/requests.js","Components/Nav/Nav.js","Components/Videocard/Videocard.js","Components/Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","alt","Nav","setSelectedOption","onClick","requests","Videocard","forwardRef","ref","movie","backdrop_path","poster_path","line","element","truncateText","text","overview","title","original_name","style","fontSize","fontWeight","release_date","first_air_date","ThumbUpSharp","vote_count","Results","selectedOption","useState","movies","setMovies","useEffect","a","axios","get","request","data","results","fetchData","map","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5cd0fa67.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Header.css\"\r\n\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\"\r\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport PersonOutlineIcon from \"@material-ui/icons/PersonOutline\"\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__icons\">\r\n            \r\n                <div className=\"icon icon--active\">\r\n                    <HomeIcon/>\r\n                    <p>Home</p>\r\n                </div>\r\n\r\n                <div className=\"icon\">\r\n                    <FlashOnIcon/>\r\n                    <p>Trending</p>\r\n                </div>\r\n\r\n                <div className=\"icon\">\r\n                    <LiveTvIcon/>\r\n                    <p>Verified</p>\r\n                </div>\r\n\r\n                <div className=\"icon\">\r\n                    <VideoLibraryIcon/>\r\n                    <p>Collection</p>\r\n                </div>\r\n\r\n                <div className=\"icon\">\r\n                    <SearchIcon/>\r\n                    <p>Search</p>\r\n                </div>\r\n\r\n                <div className=\"icon\">\r\n                    <PersonOutlineIcon/>\r\n                    <p>Account</p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <img src=\"Movie.png\" alt=\"\"/>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const API_KEY ='<fa3966344002abb5aaa9142eeeb69bc3>'\r\n\r\nexport default{\r\n   \r\n    fetchTrending:`https://api.themoviedb.org/3/trending/all/week?api_key=fa3966344002abb5aaa9142eeeb69bc3`,\r\n    \r\n    fetchTopRated:'https://api.themoviedb.org/3/movie/top_rated?api_key=fa3966344002abb5aaa9142eeeb69bc3&language=Hindi&page=1',\r\n\r\n    fetchUpComingMovie:`https://api.themoviedb.org/3/movie/upcoming?api_key=fa3966344002abb5aaa9142eeeb69bc3&language=Hindi&page=1`,\r\n    \r\n    fetchPopular:`https://api.themoviedb.org/3/movie/popular?api_key=fa3966344002abb5aaa9142eeeb69bc3&language=hindi&page=1`,\r\n\r\n    fetchTv:`https://api.themoviedb.org/3/tv/popular?api_key=fa3966344002abb5aaa9142eeeb69bc3&language=en-US&page=1`,\r\n\r\n    fetchPerson:`https://api.themoviedb.org/3/movie/121/recommendations?api_key=fa3966344002abb5aaa9142eeeb69bc3&language=en-US&page=1`,\r\n\r\n    fetchSimilar:`https://api.themoviedb.org/3/discover/tv?api_key=fa3966344002abb5aaa9142eeeb69bc3&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false`,\r\n\r\n    fetchEpisode:'https://api.themoviedb.org/3/discover/movie?api_key=fa3966344002abb5aaa9142eeeb69bc3&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1',\r\n\r\n    fetchActionMovies:`https://api.themoviedb.org/3/discover/movie?api_key=fa3966344002abb5aaa9142eeeb69bc3&with_genres=28`,\r\n    fetchComedyMovies:`https://api.themoviedb.org/3/discover/movie?api_key=fa3966344002abb5aaa9142eeeb69bc3&with_genres=35`,\r\n    fetchHorrorMovies:`https://api.themoviedb.org/3/discover/movie?api_key=fa3966344002abb5aaa9142eeeb69bc3&with_genres=27`,\r\n    fetchRomanceMovies:`https://api.themoviedb.org/3/discover/movie?api_key=fa3966344002abb5aaa9142eeeb69bc3&with_genres=10749`,\r\n    fetchDocumentaries:`https://api.themoviedb.org/3/discover/movie?api_key=fa3966344002abb5aaa9142eeeb69bc3&with_genres=99`,\r\n\r\n\r\n\r\n\r\n}   \r\n\r\n//fa3966344002abb5aaa9142eeeb69bc3","import React from 'react'\r\nimport './Nav.css'\r\nimport requests from '../../requests/requests'\r\n\r\nfunction Nav({setSelectedOption}) {\r\n    return (\r\n        <div className=\"nav\">\r\n            <h3 onClick={()=>setSelectedOption(requests.fetchTrending)}>Trending</h3>\r\n\r\n            <h3 onClick={()=>setSelectedOption(requests.fetchPerson)}>Recomanded</h3>\r\n            \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchTopRated)} >Top Rated</h3>\r\n           \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchActionMovies)}>Action</h3>\r\n           \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchComedyMovies)}>Comedy</h3>\r\n           \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchHorrorMovies)}>Horror</h3>\r\n           \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchRomanceMovies)}>Romance</h3>\r\n           \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchDocumentaries)}>Mystery</h3>\r\n            \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchPopular)}>Popular</h3>\r\n           \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchUpComingMovie)}>Upcoming Movie</h3>\r\n        \r\n            <h3 onClick={()=>setSelectedOption(requests.fetchTv)}>Tv</h3>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { forwardRef } from 'react';\r\nimport './Videocard.css';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport { ThumbUpSharp } from '@material-ui/icons'\r\n\r\n\r\nconst base_url=\"http://image.tmdb.org/t/p/original/\"\r\n\r\nconst Videocard=forwardRef(({movie},ref)=> {\r\n    return (\r\n        <div ref={ref} className=\"videocard\">\r\n            <img src={`${base_url}${movie.backdrop_path || movie.poster_path} `} \r\n            alt=\"movie poster\"></img>\r\n\r\n            <TextTruncate\r\n                line={1}\r\n                 element=\"p\"\r\n                truncateText=\"...\"\r\n                text={movie.overview}/>\r\n             \r\n                <h3> {movie.title || movie.original_name}</h3>\r\n\r\n               <p className=\"movie_info\" style={{fontSize:'12px',fontWeight:'300'}}>\r\n\r\n                {movie.release_date || movie.first_air_date} .\r\n                <ThumbUpSharp/>{\" \"} {movie.vote_count}</p>\r\n        </div> \r\n    )\r\n});\r\n\r\nexport default Videocard\r\n","import React,{useEffect , useState} from 'react'\r\nimport './Results.css'\r\nimport Videocard from '../Videocard/Videocard'\r\nimport requests from '../../requests/requests';\r\nimport axios from 'axios';\r\nimport FlipMove from 'react-flip-move'\r\n\r\nfunction Results({selectedOption}) {\r\n    const [movies,setMovies]=useState([]);\r\n\r\n    useEffect(() => {\r\n      async function fetchData(){\r\n            const request = await axios.get(selectedOption);\r\n           setMovies(request.data.results) ;\r\n           return request;\r\n      }\r\n      fetchData();  \r\n    }, [selectedOption])    \r\n\r\n    return (\r\n\r\n        <div className=\"results\">\r\n        <FlipMove>\r\n        {movies.map((movie)=>(\r\n            <Videocard key={movie.id} movie={movie}\r\n                /> \r\n        ))}\r\n        </FlipMove>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Components/Header/Header';\nimport Nav from './Components/Nav/Nav';\nimport Results from './Components/Results/Results';\nimport requests from './requests/requests';\n\nfunction App() {\n\n  const [selectedOption,setSelectedOption]= useState(requests.fetchTrending);\n\n  return (\n    <div className=\"app\">\n        <Header/>\n         <Nav setSelectedOption={setSelectedOption}/>\n         <Results selectedOption={selectedOption}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}